name: CI
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    strategy:
      matrix:
        os: [windows-latest]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v3
      - uses: mlugg/setup-zig@v1
        with:
          version: 0.14.0
      - name: Run tests
        run: zig build test --summary all
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{matrix.os}}
    needs: [test]
    steps:
      - name: Linux only - Install required system libraries
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libx11-dev \
            libxcursor-dev \
            libxinerama-dev \
            libxi-dev \
            libxrandr-dev \
            libxrender-dev \
            libxfixes-dev \
            libgl1-mesa-dev \
            libglu1-mesa-dev \
            mesa-common-dev
      - uses: actions/checkout@v3
      - uses: mlugg/setup-zig@v1
        with:
          version: 0.14.0

      - name: Build
        run: zig build

      - name: Archive binary
        run: |
          mkdir -p dist
          cp zig-out/bin/* dist/ || echo "No binaries found!"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: DogFight2005-${{ runner.os }}
          path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: DogFight2005-Linux
          path: dist/

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: DogFight2005-Windows
          path: dist/

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: DogFight2005-macOS
          path: dist/

      - name: List downloaded files
        run: ls -R dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}